#pragma once
#include "Movable.h"
#include "Graphics.h"

enum itemtypes { potions };
enum itempotions { health, stamina };

class Item : public Movable, public std::enable_shared_from_this<Item>
{
private:
	std::shared_ptr<Graphics> mdisp;
	sf::Texture txt;

	Item();

	////////////////////////////////////////////////////////////////////////////////////////
	//Movement managment			
	//
	//\brief   moves the object
	//
	//\param spdx   movement value - pixels in the x axis
	//\param spdy   movement value - pixels in the y axis
	////////////////////////////////////////////////////////////////////////////////////////
	void Move(double spdx, double spdy);
public:
	Item(AABB range, std::shared_ptr<sf::RenderWindow> window, std::shared_ptr<sf::Texture> txt);

	////////////////////////////////////////////////////////////////////////////////////////
	//Graphical draw			
	//
	//\brief   Draws the object	to the window						
	////////////////////////////////////////////////////////////////////////////////////////
	void draw();

	////////////////////////////////////////////////////////////////////////////////////////
	//accessor			
	//
	//\brief   returns the object type											
	////////////////////////////////////////////////////////////////////////////////////////
	virtual short reType();

	////////////////////////////////////////////////////////////////////////////////////////
	//Graphics updater		
	//
	//\brief   updates the graphical position of the object and any other graphical changes									
	////////////////////////////////////////////////////////////////////////////////////////
	void refreshgraphics(sf::Vector2f pos);

	////////////////////////////////////////////////////////////////////////////////////////
	//collision resolution		
	//
	//\brief   resolves intersection with different object types								
	////////////////////////////////////////////////////////////////////////////////////////
	void intersection(Object* obj);


	void action();

	~Item();
};